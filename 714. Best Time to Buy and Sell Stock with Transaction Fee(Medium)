class Solution {
    int f(vector<int>& prices,int fee,int dp[][2],int i,int buy)
    {
        if(i == prices.size()) return 0;
        if(dp[i][buy] != -1) return dp[i][buy];


        int profit = 0;
        if(buy)
        {
            //buy at i th index or not but at ith index
            profit += max(f(prices,fee,dp,i+1,0) - prices[i],0 + f(prices,fee,dp,i+1,1));
        }
        else
        {
            //sale can be done or not be done 
            profit += max(prices[i] + f(prices,fee,dp,i+1,1) - fee, 0 + f(prices,fee,dp,i+1,0));
        }
        return dp[i][buy] = profit;
    }
public:
    int maxProfit(vector<int>& prices, int fee)
    {
       int n = prices.size();
       int dp[n+1][2];
       memset(dp,-1,sizeof(dp));

       return f(prices,fee,dp,0,1);
    }
};
